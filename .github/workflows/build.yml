name: build # Nom du workflow

on: # Définition des déclencheurs du workflow
  push: # Déclencheur pour les pushs vers le dépôt
    branches: [ "main" ] # Déclenché uniquement pour les pushs sur la branche "main"

jobs: # Définition des jobs à exécuter
  build: # Nom du job
    runs-on: ubuntu-latest # Système d'exploitation sur lequel le job s'exécute
    services: # Définition des services à utiliser pendant le job
      mysql: # Service MySQL
        image: mysql:latest # Utilisation de l'image MySQL la plus récente
        env: # Variables d'environnement pour le service MySQL
          MYSQL_ALLOW_EMPTY_PASSWORD: yes # Autorisation de mot de passe vide pour MySQL
          MYSQL_DB: impotgithubaction # Nom de la base de données MySQL
        ports: # Mapping des ports pour le service MySQL
          - 3306:3306 # Port local:Port du service MySQL
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10 # Options de santé pour le service MySQL
    steps: # Définition des étapes à exécuter dans le job
      - uses: actions/checkout@v3 # Utilisation de l'action pour récupérer le code source du dépôt
      - name: Set up JDK 17 # Nom de l'étape pour configurer JDK 17
        uses: actions/setup-java@v3 # Utilisation de l'action pour configurer Java
        with: # Paramètres pour l'action de configuration de Java
          java-version: '17' # Version de Java à utiliser
          distribution: 'temurin' # Distribution JDK (ici, Temurin)
          cache: maven # Cache Maven
      - name: Build with Maven # Nom de l'étape pour construire avec Maven
        run: mvn -B package  --file pom.xml # Commande pour construire le projet avec Maven
      - name: Deploy # Nom de l'étape pour le déploiement
        run: | # Bloc de script à exécuter
          mvn -B spring-boot:build-image -Dspring-boot.build-image.publish=true \ 
              -Ddocker.user=${{ secrets.DOCKER_USER }} -Ddocker.token=${{ secrets.DOCKER_TOKEN }} \ 
              -DskipTests 
